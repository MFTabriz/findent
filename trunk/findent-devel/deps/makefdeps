#!/bin/bash
# - makefdeps -
# Creates make-dependencies for fortran sources, based on
# analysis by findent of (sub)modules that are needed or created and
# include files. Include files are not further analyzed.
# Dependencies will be like:
# prog.o: sub1.o sub2.o
# prog.o: file1.inc file2.inc
# Example:
# makefdeps *.f90 > deps
usage()
{
   echo "usage:"
   echo "$0 [-s objectsuffix] fortansources ..."
   echo "objectsuffix: default '.o'"
   echo "depending on your make system, '.lo' can be the correct one"
   exit 1
}
FINDENTPROG=${FINDENT:-findent}
p=$( getopt -o s: -- "$@" ) || usage
eval set -- "$p"

O='.o'
while [ "$1" != "--" ]; do
   case "$1" in
      '-s') shift; O="$1" ;;
   esac
   shift
done
shift

for i in $@ ; do
   j=${i%.*}$O
   findent --deps < $i | awk -v name="$j" '{ print $0, name}' 
done | 
awk '/^use /{use[$3] = use[$3] " " $2}
     /^mod |^sub /{ if (NF == 3) {module[$2] = $3}} 
     /^inc |^cpp |^coc |^std / {include[$3] = include[$3] " " $2}
END { 
      for (k in use) 
      {
	  m = ""
	  split(use[k],u)
	  for (l in u) { 
	     m=m " " module[u[l]]
	     }
	  mm = m; gsub(" ","",mm)
	  if (length(mm) != 0) { 
	     while (gsub("  "," ",m)){}
	     sub("^ ","",m)
	     print k ": " m 
	  }
      }
      for (k in include) { 
         while(sub("^ ","",include[k])){}
         print k ": " include[k] 
      }
    }'
